import { Overlay, Empty, StateLayer } from "../../components/index.slint";
import { ViewManager, ViewName, AccountManager, MessageType, MessageManager } from "../../logic/index.slint";
import { Token } from "../../global.slint";
import { SAvatar } from "../../modules/surrealism-ui/src/avatar/index.slint";
import { ROOT-STYLES } from "../../modules/surrealism-ui/themes/index.slint";

export global MenuOverlayBridge {
    in-out property <bool> is-show;
    in-out property <string> user-name;
    in-out property <string> user-signature;
    callback open-link-web();
}

component MenuItem inherits Rectangle {
    in property <image> icon;
    in property <string> label;
    in property <color> label-color: Token.color.on-surface;
    callback clicked <=> area.clicked;
    height: 36px;
    preferred-width: 100%;
    padding: 5px;
    border-radius: self.height / 2;
    clip: true;
    area := TouchArea {
        mouse-cursor: pointer;
    }

    StateLayer {
        is-hover: area.has-hover;
        is-press: area.pressed;
        background: Token.color.on-surface;
    }

    content := HorizontalLayout {
        spacing: 8px;
        padding: 8px;
        Image {
            horizontal-alignment: center;
            vertical-alignment: center;
            width: 20px;
            height: self.width;
            source: root.icon;
        }

        Text {
            horizontal-alignment: left;
            vertical-alignment: center;
            color: root.label-color;
            font-size: Token.font.title.medium.size;
            text: root.label;
        }
    }
}

component Divider inherits Rectangle {
    width: 90%;
    height: 2px;
    background: Token.color.outline;
}

export component MenuOverlay inherits Overlay {
    states [
        is-show when MenuOverlayBridge.is-show: {
            shadow.background: Colors.rgba(0,0,0,0.5);
            content.x: root.width - content.width;
            in {
                animate content.x, shadow.background {
                    duration: 400ms;
                    easing: ease-out-quart;
                }
            }
            out {
                animate content.x, shadow.background {
                    duration: 200ms;
                    easing: ease-in-quart;
                }
            }
        }
        not-show when !MenuOverlayBridge.is-show: {
            shadow.background: Colors.rgba(0,0,0,0);
            content.x: root.width;
        }
    ]
    shadow := Rectangle {
        background: transparent;
        shadow-area := TouchArea {
            clicked => {
                MenuOverlayBridge.is-show = false;
                ViewManager.prior-view();
            }
        }
    }

    content := Rectangle {
        x: root.width;
        height: root.height;
        width: 250px;
        background: Token.color.surface-container;
        border-top-left-radius: 16px;
        border-bottom-left-radius: self.border-top-left-radius;
        VerticalLayout {
            padding: 10px;
            padding-top: 30px;
            spacing: 5px;
            Rectangle {
                HorizontalLayout {
                    spacing: 10px;
                    padding-bottom: 10px;
                    SAvatar {
                        avatar-size: 64px;
                        avatar: Token.image.display.avatar[0];
                    }

                    VerticalLayout {
                        spacing: 5px;
                        padding-top: 5px;
                        Text {
                            text: AccountManager.is-login ? MenuOverlayBridge.user-name : "请登录";
                            font-size: Token.font.title.large.size;
                            font-weight: Token.font.title.large.weight;
                            color: Token.color.on-surface;
                        }

                        Text {
                            text: AccountManager.is-login ? MenuOverlayBridge.user-signature : "个性签名";
                            font-size: Token.font.title.small.size;
                            font-weight: Token.font.title.small.weight;
                            color: Token.color.on-surface-variant;
                        }
                    }
                }

                profile-area := TouchArea {
                    mouse-cursor: pointer;
                    clicked => {
                        if (AccountManager.is-login) {
                            MenuOverlayBridge.open-link-web();
                        } else {
                            ViewManager.clean-navigate-to(ViewName.LoginOverlay);
                        }
                    }
                }
            }

            Divider { }

            MenuItem {
                icon: Token.image.icon.me.normal;
                label: "个人资料";
                clicked => {
                    // TODO: implement
                    ViewManager.prior-view();
                    MessageManager.show-message("个人资料页面尚未完成", MessageType.Info);
                }
            }

            MenuItem {
                icon: Token.image.icon.history.normal;
                label: "历史活动";
                clicked => {
                    ViewManager.replace-navigate-to(ViewName.HistoryPage)
                }
            }

            MenuItem {
                icon: Token.image.icon.card.normal;
                label: "纪念卡";
                clicked => {
                    // NOTE: Unsupport
                    ViewManager.prior-view();
                    MessageManager.show-message("纪念卡功能尚未完成", MessageType.Info);
                }
            }

            Divider { }

            MenuItem {
                icon: Token.image.icon.setting.normal;
                label: "设置";
                clicked => {
                    ViewManager.replace-navigate-to(ViewName.SettingPage)
                }
            }

            MenuItem {
                icon: Token.image.icon.info.normal;
                label: "关于";
                clicked => {
                    ViewManager.replace-navigate-to(ViewName.AboutPage)
                }
            }

            Divider { }

            MenuItem {
                icon: Token.image.icon.logout;
                label: "退出登录";
                label-color: ROOT-STYLES.sur-theme-colors.error.normal;
                clicked => {
                    AccountManager.request-logout();
                }
            }
        }
    }
}
