import { Token } from "../../global.slint";
import { Overlay, Empty, StyledText } from "../../components/index.slint";
import { ViewManager, MessageManager, MessageType, AccountManagerBridge } from "../../logic/index.slint";

import { SButton } from "../../modules/surrealism-ui/index.slint";
import { Button, ButtonType } from "../../components/index.slint";

export global LoginOverlayBridge {
    in-out property <string> version:"v0.0.0-00000000";
    callback link-login();
    public function guest-login() {
        MessageManager.show-message("访客登录尚未完成", MessageType.info);
        // ViewManager.prior-view();
    }
}

export component LoginOverlay inherits Overlay {
    shadow := Rectangle {
        background: Token.color.surface;
        // hide other view because no guest login, remember to change isTransparent()
        // opacity: 0.75;
        shadow-area := TouchArea {
            clicked => {
                // TODO: support guest login
                // guest login disabled
                // ViewManager.prior-view();
            }
            pointer-event(e) => {
                // developer shortcut
                if (e.modifiers.shift && e.modifiers.control && e.kind == PointerEventKind.up) {
                    if (e.button == PointerEventButton.left) {
                        debug("[Developer Shortcut] LoginOverlay: force close LoginView");
                        ViewManager.prior-view();
                    } else if (e.button == PointerEventButton.right) {
                        debug("[Developer Shortcut] LoginOverlay: fake login, skip LoginView");
                        AccountManagerBridge.is-login = true;
                        debug("[Developer Shortcut] LoginOverlay: AccountManagerBridge.is-login -> true");
                        ViewManager.prior-view();
                    }
                }
            }
        }
    }

    VerticalLayout {
        padding: 16px;
        _logo := Rectangle {
            min-height: 0;
            preferred-height: 0;
            vertical-stretch: 0.618;
            Image {
                vertical-stretch: 2;
                height: 90px;
                image-fit: contain;
                source: Token.image.display.evento;
            }
        }

        VerticalLayout {
            min-height: 0;
            preferred-height: 0;
            vertical-stretch: (1 - _logo.vertical-stretch) / 2;
            alignment: center;
            spacing: 20px;
            _login-button := Rectangle {
                Button {
                    type: ButtonType.filled;
                    width: 240px;
                    height: 55px;
                    content: "使用 Link 登录";
                    font: Token.font.headline.small;
                    have-icon: true;
                    icon-size: 32px;
                    filled-surface: Token.color.inverse-surface;
                    filled-on-surface: Token.color.inverse-on-surface;
                    Image {
                        width: parent.icon-size;
                        source: Token.image.icon.sast-link;
                        colorize: Token.color.inverse-on-surface;
                    }

                    clicked => {
                        LoginOverlayBridge.link-login();
                    }
                }
            }

            // TODO: guest login
            if false: _guest-button := Rectangle {
                Button {
                    content: "访客登录";
                    font: Token.font.body.large;
                    have-icon: true;
                    icon-size: 30px;
                    Image {
                        horizontal-stretch: 1;
                        height: parent.icon-size;
                        source: Token.image.icon.account-box;
                        colorize: Token.color.on-surface;
                    }

                    clicked => {
                        LoginOverlayBridge.guest-login();
                    }
                }
            }
        }

        VerticalLayout {
            min-height: 0;
            preferred-height: 0;
            vertical-stretch: (1 - _logo.vertical-stretch) / 2;
            alignment: end;
            padding: 20px;
            HorizontalLayout {
                min-height: 0;
                preferred-height: 0;
                vertical-stretch: 0.35;
                _developer-label := Rectangle {
                    Text {
                        text: "SAST-C++组开发";
                        font-size: Token.font.label.large.size;
                        font-weight: Token.font.label.large.weight;
                        color: Token.color.on-surface;
                    }
                }

                _version-label := Rectangle {
                    vertical-stretch: 0;
                    Text {
                        text: LoginOverlayBridge.version;
                        font-size: Token.font.label.large.size;
                        font-weight: Token.font.label.large.weight;
                        color: Token.color.on-surface;
                    }
                }
            }
        }
    }
}
