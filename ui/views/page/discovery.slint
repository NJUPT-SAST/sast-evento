import { Token } from "../../global.slint";
import { Page, Empty } from "../../components/index.slint";
import { EventCard, EventCardGroup } from "../../components/event_card.slint";
import { EventStruct } from "../../components/event_struct.slint";
import { SCarousel } from "../../modules/surrealism-ui/index.slint";
import { EventoImageToken } from "../../assets/image/image_token.slint";
import { Token } from "../../global.slint";
import { DefaultSCarouselProps } from "../../modules/surrealism-ui/themes/src/carousel.slint";
import { HorizontalBox, ScrollView } from "std-widgets.slint";

export global DiscoveryPageBridge { 
    // callbacks
    pure callback div(int, int) -> int;
    pure callback calc_block_col_num(int, int) -> int;
    pure callback calc_block_row_num(int, int) -> int;
}

export component DiscoveryPage inherits Page {
    /*  demo code for generating corresponding C++ code correctly
        remove this when EventCard&EventCardGroup is truly used
        otherwise "Convert.h/Convert.cc" will fail to compile    */

    // TODO: implement Discovery
    // optional
    background := Empty { }
    
    //BEGIN debug data

    in property <int> event_num;
    in property <[EventStruct]> event_list: [
        {
            id: 1,
            summary-abbr: "软",
            summary: "软件研发部 C++组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 2,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 3,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 4,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 5,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 6,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 7,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 8,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 9,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 10,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 11,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 12,
            summary-abbr: "软",
            summary: "软件研发部 Web组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        },
        {
            id: 13,
            summary-abbr: "软",
            summary: "软件研发部 C#组授课",
            time: "09.30 14:30 - 09.30 15:30",
            location: "仙林校区 大学生活动中心101",
            description: "组内授课"
        }
    ];
    //END   debug data

    layout := VerticalLayout {
        visible: false;
        x: 0;
        y: 0;
        width: 100%;
        height: 100%;
    }

    body := Empty {
        x: 0;
        y: 0;
        width: 100%;
        height: 100%;

            Rectangle {
                width: 100%;
                height: 100%;

                ScrollView {
                    height: root.height;
                    width: root.width;

                    VerticalLayout {
                        // calculate actual block size

                    // idx = row * block_col_num + col
                    //        |                     |
                    //     y/height              x/width
                    
                    SCarousel {
                        width: 100%;
                        height: root.height * 0.5;
                        fold-height: root.height * 0.5;
                        active: 3;
                        focus-main: true;
                        fit: contain;
                        sources: [
                            EventoImageToken.image.display.event.default[0],
                            EventoImageToken.image.display.event.default[0],
                            EventoImageToken.image.display.event.default[0],
                        ];
                    }
                    
                    Rectangle {
                        height: 40px;
                        width: 100%;
                        Text {
                            color: Token.color.inverse-surface;
                            font-size: Token.font.title.large.size;
                            font-weight: Token.font.label.large.weight;
                            text: "正在进行的活动";
                        }
                    }

                    in property <[EventStruct]> current_event_list: event_list;
                    in property <int> current_event_row_num: floor(current_event_list.length / 3) * 3 == current_event_list.length ? current_event_list.length / 3 : floor(current_event_list.length / 3) + 1;
                    
                    Rectangle {
                        height: current_event_row_num * 188px + 20px * (current_event_row_num - 1);
                        EventCardGroup {
                            model: event_list;
                            item-clicked(event-struct) => {
                                debug("id: " + event-struct.id + " title: " + event-struct.summary);
                            }
                        }
                    }

                    Rectangle {
                        height: 40px;
                        width: 100%;
                        Text {
                            color: Token.color.inverse-surface;
                            font-size: Token.font.title.large.size;
                            font-weight: Token.font.label.large.weight;
                            text: "最新的活动";
                        }
                    }

                    in property <[EventStruct]> newest_event_list: event_list;
                    in property <int> newest_event_row_num: floor(newest_event_list.length / 3) * 3 == newest_event_list.length ? newest_event_list.length / 3 : floor(newest_event_list.length / 3) + 1;
                    
                    Rectangle {
                        height: newest_event_row_num * 188px + 20px * (newest_event_row_num - 1);
                        EventCardGroup {
                            model: event_list;
                            item-clicked(event-struct) => {
                                debug("id: " + event-struct.id + " title: " + event-struct.summary);
                            }
                        }
                    }

                    // in property <int> block_max_w: 400;
                    // in property <int> block_max_h: 200;
                    // in property <int> block_col_num: DiscoveryPageBridge.calc_block_col_num(root.width / 1px, block_max_w);
                    // in property <int> block_row_num: DiscoveryPageBridge.calc_block_row_num(root.height / 1px, block_max_h);

                    // in property<int> block_width:  min(block_max_w, root.width / 1px / block_col_num);
                    // in property<int> block_height: min(block_max_h, root.height/ 1px / block_row_num);
                    // 
                    // Rectangle {
                    //     width: 100%;
                    //     height: (DiscoveryPageBridge.div(event_num, block_col_num) + 1) * 200 * 1px;
                    //     VerticalLayout {
                    //         in property <int> i: 0;
                    //         in property <int> j: 0;

                    //         // row_num
                    //         for i in DiscoveryPageBridge.div(event_num, block_col_num) : HorizontalLayout {
                    //             // col_num
                    //             for j in block_col_num: Empty {
                    //                 if(3 * i + j <= event_num): EventCard {
                    //                     event: event_list[3 * i + j];
                    //                 }
                    //             }
                    //         }
                    //     }
                    // }
                }
            }
        }
    }
}
