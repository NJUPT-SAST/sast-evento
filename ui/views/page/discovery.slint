import { Token } from "../../global.slint";
import { Page, Empty } from "../../components/index.slint";
import { SCarousel } from "../../modules/surrealism-ui/index.slint";
import { EventoImageToken } from "../../assets/image/image_token.slint";
import { EventoStyleToken } from "../../logic/style_token.slint";
import { DefaultSCarouselProps } from "../../modules/surrealism-ui/themes/src/carousel.slint";
import { HorizontalBox, ScrollView } from "std-widgets.slint";

export global DiscoveryPageBridge { 
    // callbacks
    pure callback div(int, int) -> int;
    // pure callback calc_block_height(int, int) -> int;
    // pure callback calc_block_width(int, int) -> int;
    pure callback calc_block_col_num(int, int) -> int;
    pure callback calc_block_row_num(int, int) -> int;
}

struct block_data {
    img:   image,
    title: string,
    date:  string,
    time:  string,
    info:  string
}

// infomation of events
component block {
    preferred-height: 200px;
    preferred-width: 400px;
    in property <block_data> data;
    Rectangle {
        background: #ffffff;
        HorizontalLayout {
            preview := Image{
                height: 100%;
                width: 50%;
                image-fit: contain;
                source: data.img;
            }
            VerticalLayout {
                title := Text { 
                    text: data.title; 
                    font-size: EventoStyleToken.font.title.medium.size;   
                    font-weight: EventoStyleToken.font.title.medium.weight;  
                }
                date  := Text { 
                    text: data.date; 
                    font-size: EventoStyleToken.font.display.medium.size; 
                    font-weight: EventoStyleToken.font.display.medium.weight;
                }
                time  := Text { 
                    text: data.time; 
                    font-size: EventoStyleToken.font.display.medium.size; 
                    font-weight: EventoStyleToken.font.display.medium.weight;
                }
                info  := Text { 
                    text: data.info; 
                    font-size: EventoStyleToken.font.display.medium.size; 
                    font-weight: EventoStyleToken.font.display.medium.weight;
                }
            }
        }
    }
}

export component DiscoveryPage inherits Page {
    // debug sample data
    // struct block_data {
    //     img:   image,
    //     title: string,
    //     date:  string,
    //     time:  string,
    //     info:  string
    // }
    in property <int> current_event_num: 10;
    in property <[block_data]> current_event_list: [
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"}
    ];
    in property <int> newest_event_num: 10;
    in property <[block_data]> newest_event_list: [
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"},
        { img: EventoImageToken.image.display.event.cpp[0], title: "C++组授课", date: "7月22日", time: "13:30-15:30", info: "C++组\n活动授课"}
    ];
    // end debug data
    

    
    background := Empty { }

    layout := VerticalLayout {
        visible: false;
        x: 0;
        y: 0;
        width: 100%;
        height: 100%;
    }

    body := Empty {
        x: 0;
        y: 0;
        width: 100%;
        height: 100%;
        Rectangle {
            width: 100%;
            height: 100%;

            background: #1e1e2e;

            ScrollView {
                height: parent.height;
                width: parent.width;

                VerticalLayout {
                    // calculate actual block size

                    // idx = row * block_col_num + col
                    //        |                     |
                    //     y/height              x/width
                    
                    SCarousel {
                        width: 100%;
                        height: root.height * 0.5;
                        fold-height: root.height * 0.5;
                        active: 3;
                        focus-main: true;
                        fit: contain;
                        sources: [
                            EventoImageToken.image.display.event.cpp[0],
                            EventoImageToken.image.display.event.cpp[1],
                            EventoImageToken.image.display.event.cpp[2],
                        ];
                    }

                    Rectangle {
                        // 提示词: 正在进行的活动
                        height: 40px;
                        width: 100%;
                        Text {
                            text: "正在进行的活动";
                        }
                    }
                    
                    in property <int> block_max_w: 400;
                    in property <int> block_max_h: 200;
                    in property <int> block_col_num: DiscoveryPageBridge.calc_block_col_num(root.width / 1px, block_max_w);
                    in property <int> block_row_num: DiscoveryPageBridge.calc_block_row_num(root.height / 1px, block_max_h);

                    in property<int> block_width:  min(block_max_w, root.width / 1px / block_col_num);
                    in property<int> block_height: min(block_max_h, root.height/ 1px / block_row_num);
                    
                    Rectangle {
                        background: #39c5bb;
                        width: 100%;
                        height: (DiscoveryPageBridge.div(current_event_num, 3) + 1) * 200 * 1px;
                        VerticalLayout {
                            in property <int> i: 0;
                            in property <int> j: 0;

                            // row_num
                            for i in DiscoveryPageBridge.div(current_event_num, block_col_num) : HorizontalLayout {
                                // col_num
                                for j in block_col_num: Empty {
                                    if(3 * i + j <= current_event_num): block {
                                        width: block_width * 1px;
                                        height:block_height * 1px;
                                        data: current_event_list[block_col_num * i + j];
                                    }
                                }
                            }
                        }
                    }
                    
                    Rectangle {
                        // 提示词: 最新的活动
                        height: 40px;
                        width: 100%;
                        Text {
                            text: "最新的活动";
                        }
                    }

                    Rectangle {
                        background: #66ccff;
                        height: 200px;
                        width: 100%;
                    }
                    
                    // for ... block ... : 最新的活动内容
                    // for itm[idx] in newest_event_list: block {
                    //     x: 1px * calcBlockX(idx, block_width, block_col_num);
                    //     y: 1px * calcBlockY(idx, block_height, block_col_num);
                    //     // x: block_width * (idx - idx / block_col_num) * 1px;
                    //     // y: block_height * (idx / block_col_num) * 1px;
                    //     height: block_height * 1px;
                    //     width: block_width * 1px;
                    //     data: itm;
                    // }

                }
            }
        }
    }
}
