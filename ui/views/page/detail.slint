import { Token } from "../../global.slint";
import { Page, Empty, Button, EventStruct, EventState, FeedbackStruct, ContentDialog, PageState, LoadingAnimation } from "../../components/index.slint";
import { VerticalBox, LineEdit, ScrollView, TextEdit } from "std-widgets.slint";
import { SStar} from "../../modules/surrealism-ui/index.slint";


export global DetailPageBridge {
    callback load-event();
    callback load-feedback();
    callback feedback(int, int, string);
    callback check-in(string);
    callback subscribe(bool);
    in property <EventStruct> event-model: {
        id: 1,
        summary: "软件研发部 C++组授课12314321232432",
        summary-abbr: "软",
        description: "软件研发部 C++组授课",
        time: "9月1日 14:00-15:00",
        location: "大学生活动中心 101中区",
        tag: "C++",
        larkMeetingRoomName: "大学生活动中心 101中区",
        larkDepartmentName: "C++组",
        state: EventState.Active,
        is-subscribed: false,
        is-checkIn: false
    };
    in property <FeedbackStruct> feedback-model: { rate: 5, content: "这次活动很棒", has-feedbacked: false };
    in property <PageState> state;
}

component IconText {
    in property <image> icon;
    in property <string> text;
    HorizontalLayout {
        spacing: 5px;
        alignment: start;
        Image {
            source: root.icon;
        }

        Text {
            text: root.text;
            vertical-alignment: TextVerticalAlignment.center;
            font-size: 16px;
            wrap: TextWrap.char-wrap;
        }
    }
}

component HighlightBlock {
    pure function state-to-text(state: EventState) -> string {
        if (state == EventState.SigningUp) {
            return "报名中";
        } else if (state == EventState.Active) {
            return "进行中";
        } else if (state == EventState.Completed) {
            return "已结束";
        } else if (state == EventState.Cancelled) {
            return "已取消";
        } else {
            return "未知状态";
        }
    }
    in property <EventState> state;
    HorizontalLayout {
        spacing: 10px;
        Rectangle {
            width: 7px;
            background: Token.color.primary;
        }

        Text {
            text: state-to-text(root.state);
            font-size: Token.font.title.large.size;
            font-weight: Token.font.title.large.weight;
            vertical-alignment: center;
        }
    }
}

component EventInfoBlock {
    VerticalLayout {
        spacing: 10px;
        IconText {
            icon: Token.image.icon.time;
            text: DetailPageBridge.event-model.time;
        }

        IconText {
            icon: Token.image.icon.locate;
            text: DetailPageBridge.event-model.location;
        }

        IconText {
            icon: Token.image.icon.department;
            text: DetailPageBridge.event-model.larkDepartmentName;
        }

        IconText {
            icon: Token.image.icon.tag;
            text: DetailPageBridge.event-model.tag;
        }

        IconText {
            icon: Token.image.icon.topic;
            text: DetailPageBridge.event-model.description;
        }
    }
}

export component DetailPage inherits Page {
    property <bool> able-to-feedback: DetailPageBridge.state == PageState.normal && DetailPageBridge.event-model.is-checkIn && DetailPageBridge.event-model.state == EventState.Completed;
    dialog := ContentDialog {
        width: 100%;
        height: 100%;
        is-show: false;
        dialog-title: "签到";

        text-edit := LineEdit {
            width: 100%;
            height: 58px;
            font-size: Token.font.body.large.size;
            placeholder-text: "请输入签到码";
            horizontal-alignment: center;
        }

        confirm-btn-text: "签到";
        cancel-btn-text: "取消";

        confirm => {
            debug("confirm ", text-edit.text);
            dialog.close();
        }

        cancel => {
            dialog.close();
        }
    }

    VerticalLayout {
        padding: 50px;
        padding-top: 20px;
        padding-bottom: 20px;
        spacing: 30px;
        Text {
            text: DetailPageBridge.event-model.summary;
            font-size: Token.font.display.medium.size;
            font-weight: Token.font.display.medium.weight;
            wrap: TextWrap.char-wrap;
        }

        ScrollView {
            VerticalLayout {
                spacing: 20px;
                HighlightBlock {
                    height: 35px;
                    state: DetailPageBridge.event-model.state;
                }

                EventInfoBlock { }

                Rectangle {
                    if DetailPageBridge.state == PageState.loading: Rectangle {
                        LoadingAnimation {
                            width: 40px;
                            height: 40px;
                        }
                    }

                    if DetailPageBridge.state == PageState.error: Rectangle {
                        Button {
                            type: filled-tonal;
                            content: "重新加载";
                            clicked => {
                                DetailPageBridge.load-feedback();
                            }
                        }
                    }
                }

                if able-to-feedback: Rectangle {
                    width: 80%;
                    height: 1px;
                    background: Token.color.outline-variant;
                }

                if able-to-feedback: Rectangle {
                    VerticalLayout {
                        spacing: 10px;
                        Text {
                            text: "反馈";
                            font-size: Token.font.title.large.size;
                            font-weight: Token.font.title.large.weight;
                        }

                        SStar {
                            score: DetailPageBridge.feedback-model.rate;
                        }

                        LineEdit {
                            font-size: Token.font.body.large.size;
                            placeholder-text: "参与完本次活动，有什么想说的吗，快告诉我们吧";
                            text: DetailPageBridge.feedback-model.content;
                        }

                        HorizontalLayout {
                            alignment: end;
                            Button {
                                type: filled-tonal;
                                content: "提交";
                                disable: DetailPageBridge.feedback-model.rate == 0 || DetailPageBridge.feedback-model.has-feedbacked;
                            }
                        }
                    }
                }
            }
        }

        Rectangle {
            height: 40px;
            HorizontalLayout {
                spacing: 20px;
                Button {
                    type: filled;
                    content: DetailPageBridge.event-model.is-subscribed ? "取消报名" : "报名";            
          disable: DetailPageBridge.event-model.state != EventState.SigningUp;
                }

                Button {
                    type: filled;
                    content: DetailPageBridge.event-model.is-checkIn ? "已签到" : "签到";
                    disable: DetailPageBridge.event-model.is-checkIn || DetailPageBridge.event-model.state == EventState.Completed || DetailPageBridge.event-model.state == EventState.Cancelled;
                    clicked => {
                        dialog.open();
                    }
                }
            }
        }
    }
}
