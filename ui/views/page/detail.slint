import { Token } from "../../global.slint";
import { Page, Empty } from "../../components/index.slint";
import { Icon } from "../../modules/surrealism-ui/src/icon/icon.slint";
import { VerticalBox, HorizontalBox, LineEdit, TextEdit, ScrollView } from "std-widgets.slint";
import { SIcon, SCatalog, SStar, SButton } from "../../modules/surrealism-ui/index.slint";
import { TimeLine } from "../../modules/surrealism-ui/src/timeline/timeline.slint";


export global DetailPageBridge {
    callback get-event-info();
    callback name();
    in-out property <string> event-name: "软件研发部 C++组授课";
    in-out property <string> event-status: "报名中";
    in-out property <[{icon: image, text: string}]> event-model: [
        { icon: Token.image.icon.time, text: "9月1日 14:00-15:00" },
        { icon: Token.image.icon.locate, text: "大学生活动中心 101中区" },
        { icon: Token.image.icon.department, text: "C++组" },
        { icon: Token.image.icon.category, text: "软研授课" },
        { icon: Token.image.icon.tag, text: "C++" },
        { icon: Token.image.icon.topic, text: "输入输出流" },
    ];
}

component CommentBlock {
    in-out property <string> comment_text;
    Rectangle {
        border-radius: 20px;
        background: Token.color.surface-container;
        Text {
            x: 20px;
            y: 10px;
            text: "反馈";
            horizontal-alignment: TextHorizontalAlignment.center;
            vertical-alignment: TextVerticalAlignment.center;
        }

        Rectangle {
            x: 20px;
            y: 47px;
            height: parent.height - self.y - self.x;
            width: parent.width - 2 * self.x;
            border-radius: 10px;
            background: Token.color.surface-container-high;
            TextEdit {
                visible: self.height > 40px ? true : false;
                enabled: true;
                font-size: 16px;
                wrap: char-wrap;
                horizontal-alignment: TextHorizontalAlignment.left;
                opacity: 1;
                x: 10px;
                y: 10px;
                width: parent.width - 2 * self.x;
                height: btn.y - 5px - self.y;
                placeholder-text: "请评价一下吧";
            }

            Text {
                visible: self.height > 40px ? false : true;
                x: 10px;
                y: 10px;
                width: parent.width - 2 * self.x;
                height: btn.y - 5px - self.y;
                text: "显示不下了啦QAQ";
                font-size: 16px;
            }

            btn := SButton {
                text: "提交";
                width: 60px;
                height: 20px;
                x: parent.width - self.width - 12px;
                y: parent.height - self.height - 12px;
            }

            SStar {
                score: 3;
                width: 100px;
                height: btn.height;
                x: btn.x - self.width - 12px;
                y: btn.y;
            }
        }
    }
}

component IconText {
    in property <image> icon;
    in property <string> text;
    HorizontalLayout {
        spacing: root.width * 5%;
        icon := Image {
            height: min(root.height, root.width);
            width: self.height;
            source: root.icon;
        }

        Text {
            height: root.height;
            width: root.width - parent.spacing - icon.width;
            text: root.text;
            vertical-alignment: TextVerticalAlignment.center;
            font-size: 16px;
        }
    }
}

component HighlightBlock {
    in property <string> text: "Test content";
    Rectangle {
        width: root.width;
        height: 40px;
        Rectangle {
            x: 0px;
            y: 0px;
            width: 7px;
            height: 100%;
            background: Token.color.primary;
        }

        Text {
            x: 20px;
            y: 0px;
            width: parent.width - self.x;
            height: 100%;
            text: root.text;
            font-size: 30px;
        }
    }
}

component EventInfoBlock {
    // in property <[{icon: image, text: string}]> model: [
    //     { icon: Token.image.icon.time, text: "9月1日 14:00-15:00" },
    //     { icon: Token.image.icon.locate, text: "大学生活动中心 101中区" },
    //     { icon: Token.image.icon.department, text: "C++组" },
    //     { icon: Token.image.icon.category, text: "软研授课" },
    //     { icon: Token.image.icon.tag, text: "C++" },
    //     { icon: Token.image.icon.topic, text: "输入输出流" },
    // ];
    VerticalLayout {
        x: 0px;
        y: 10px;
        spacing: 10px;
        for data in DetailPageBridge.event-model: repeated-icontext := IconText {
            width: parent.width;
            height: (parent.height - parent.y - (DetailPageBridge.event-model.length - 1) * parent.spacing) / DetailPageBridge.event-model.length;
            visible: true;
            x: 0px;
            text: data.text;
            icon: data.icon;
        }
    }
}

export component DetailPage inherits Page {
    // TODO: implement Detail
    // optional
    background := Empty { }

    layout := VerticalLayout {
        visible: false;
        x: 0;
        y: 0;
        width: 100%;
        height: 100%;
    }

    body := Empty {
        x: 0;
        y: 0;
        width: 100%;
        height: 100%;
        ScrollView {
            y: 20px;
            width: parent.width;
            height: parent.height - 100px;
            VerticalLayout {
                x: 40px;
                width: parent.width - 2 * self.x;
                spacing: 20px;
                Text {
                    width: parent.width;
                    height: 50px;
                    text: DetailPageBridge.event-name;
                    font-size: 35px;
                }

                HighlightBlock {
                    width: parent.width;
                    height: 35px;
                    text: DetailPageBridge.event-status;
                }

                EventInfoBlock {
                    width: parent.width;
                    height: 200px;
                }

                CommentBlock {
                    x: 10px;
                    width: parent.width - 2 * self.x;
                    height: 280px;
                }
            }
        }

        Rectangle {
            y: parent.height - 60px;
            width: parent.width;
            height: 40px;
            // background: Token.color.primary-container;
            SButton {
                x: 20px;
                y: 0px;
                width: 120px;
                height: parent.height;
                text: "报名";
            }

            SButton {
                x: 160px;
                y: 0px;
                width: 120px;
                height: parent.height;
                text: "签到";
            }
        }
    }
}
