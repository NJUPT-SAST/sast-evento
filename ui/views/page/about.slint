import { Token } from "../../global.slint";
import { Page, Empty, ContentDialog } from "../../components/index.slint";
import { SCarousel } from "../../modules/surrealism-ui/index.slint";
import { EventoImageToken } from "../../assets/image/image_token.slint";
import { EventoStyleToken } from "../../logic/style_token.slint";
import { DefaultSCarouselProps } from "../../modules/surrealism-ui/themes/src/carousel.slint";
import { AboutSlint, Button, VerticalBox, HorizontalBox, ListView, StandardListView, Switch, ScrollView, StandardButton } from "std-widgets.slint";

import { SButton, SLink, SDialog } from "../../modules/surrealism-ui/index.slint";

// Made with Slint badge
export component AboutSlint inherits Rectangle {
    AboutSlint { }
}

export global AboutPageBridge {
    in-out property <string> version:"v0.0.0-00000000";
    in-out property <string> updateMessage: "";
    in-out property <bool> is_lastest: false;
    callback checkUpdate() -> bool;
    callback open-web(string);
}

component Dependence inherits Rectangle {
    in property <string> content;
    height: 18px;
    width: text.preferred-width + 9px;
    border-width: 1px;
    border-color: Token.color.outline;
    border-radius: 9px;
    background: transparent;
    text := Text {
        vertical-alignment: center;
        horizontal-alignment: center;
        text: parent.content;
        font-size: Token.font.label.large.size;
        font-weight: Token.font.label.large.weight;
        color: Token.color.on-surface;
    }
}

component AboutPageContent inherits Rectangle {

    preferred-height: 50px;

    background: Token.color.surface;
    border-color: Token.color.outline;

    layout := VerticalLayout {
        visible: false;
        x: 0;
        y: 0;
        width: 100%;
        height: 100%;
        padding: 16px;
        spacing: 16px;
        layout-logo := Rectangle {
            vertical-stretch: 0.3;
            border-width: 2px;
            border-color: red;
        }

        layout-version-info := Rectangle {
            vertical-stretch: (1 - layout-logo.vertical-stretch) / 12 * 1;
            border-width: 2px;
            border-color: red;
        }

        layout-basic-info := Rectangle {
            vertical-stretch: (1 - layout-logo.vertical-stretch) / 12 * 6;
            border-width: 2px;
            border-color: red;
        }

        layout-developer-label := Rectangle {
            vertical-stretch: (1 - layout-logo.vertical-stretch) / 12 * 3;
            border-width: 2px;
            border-color: red;
        }

        layout-about-slint := Rectangle {
            vertical-stretch: (1 - layout-logo.vertical-stretch) / 12 * 1;
            border-width: 2px;
            border-color: red;
        }
    }

    body := Empty {
        x: 0;
        y: 0;
        width: 100%;
        height: 100%;

        logo := Empty {
            x: layout-logo.absolute-position.x - root.absolute-position.x;
            y: layout-logo.absolute-position.y - root.absolute-position.y;
            width: layout-logo.width;
            height: layout-logo.height;
            Image {
                vertical-stretch: 2;
                height: root.preferred-height * self.vertical-stretch;
                image-fit: contain;
                source: Token.image.display.evento;
            }
        }

        version-info := Empty {
            x: layout-version-info.absolute-position.x - root.absolute-position.x;
            y: logo.y + layout.padding + logo.height;
            width: layout-version-info.width;
            height: root.preferred-height * 1;
            Rectangle {
                border-radius: root.preferred-height / 8;
                border-width: 1px;
                border-color: Token.color.outline;
                background: Token.color.surface;
                VerticalLayout {
                    Rectangle {
                        height: root.preferred-height;
                        HorizontalLayout {
                            padding: layout.padding;
                            Rectangle {
                                width: parent.width * 50%;
                                Text {
                                    height: self.preferred-height;
                                    width: 100%;
                                    text: "版本信息 " + AboutPageBridge.version;
                                    font-size: Token.font.body.large.size;
                                    font-weight: Token.font.body.large.weight;
                                    color: Token.color.on-surface;
                                    wrap: TextWrap.word-wrap;
                                }
                            }

                            Rectangle {
                                width: parent.width * 50%;
                                padding: layout.padding;
                                Button {
                                    x: parent.width - self.width - layout.padding * 2;
                                    text: "检查更新";
                                    clicked => {
                                        if (true) {
                                            popup.open();
                                        } else {
                                            self.text = AboutPageBridge.updateMessage;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        basic-info := Empty {
            x: layout-basic-info.absolute-position.x - root.absolute-position.x;
            y: version-info.y + layout.padding + version-info.height;
            width: layout-basic-info.width;
            height: root.preferred-height * 6;
            Rectangle {
                border-radius: root.preferred-height / 8;
                border-width: 1px;
                border-color: Token.color.outline;
                background: Token.color.surface;
                VerticalLayout {
                    Rectangle {
                        height: root.preferred-height;
                        HorizontalLayout {
                            padding: layout.padding;
                            Rectangle {
                                width: parent.width * 50%;
                                Text {
                                    height: self.preferred-height;
                                    width: 100%;
                                    text: "网页端";
                                    font-size: Token.font.body.large.size;
                                    font-weight: Token.font.body.large.weight;
                                    color: Token.color.on-surface;
                                    wrap: TextWrap.word-wrap;
                                }
                            }

                            Rectangle {
                                width: parent.width * 50%;
                                padding: layout.padding;
                                SLink {
                                    x: parent.width - self.width - layout.padding * 2;
                                    height: self.preferred-height;
                                    text: "https://evento.sast.fun";
                                    font-size: Token.font.body.large.size;
                                    font-weight: Token.font.body.large.weight;
                                    theme: Token.surrealism-ui-default-theme;
                                    clicked => {
                                        AboutPageBridge.open-web("https://evento.sast.fun");
                                    }
                                }
                            }
                        }
                    }

                    Rectangle {
                        x: layout.padding;
                        height: 1px;
                        width: parent.width - layout.padding * 2;
                        background: Token.color.outline-variant;
                    }

                    Rectangle {
                        height: root.preferred-height * 2;
                        HorizontalLayout {
                            padding: layout.padding;
                            Rectangle {
                                width: parent.width * 50%;
                                Text {
                                    height: self.preferred-height;
                                    width: 100%;
                                    text: "GitHub 仓库";
                                    font-size: Token.font.body.large.size;
                                    font-weight: Token.font.body.large.weight;
                                    color: Token.color.on-surface;
                                }
                            }

                            VerticalLayout {
                                Rectangle {
                                    width: 50%;
                                    padding: layout.padding;
                                    SLink {
                                        x: parent.width - self.width - layout.padding * 2;
                                        height: self.preferred-height;
                                        text: "https://github.com/NJUPT-SAST/sast-evento";
                                        font-size: Token.font.body.large.size;
                                        font-weight: Token.font.label.large.weight;
                                        theme: Token.surrealism-ui-default-theme;
                                        clicked => {
                                            AboutPageBridge.open-web("https://github.com/NJUPT-SAST/sast-evento");
                                        }
                                    }
                                }

                                Rectangle {
                                    width: 50%;
                                    padding: layout.padding;
                                    Button {
                                        x: parent.width - self.width - layout.padding * 2;
                                        text: "功能建议 / 漏洞报告";
                                        clicked => {
                                            AboutPageBridge.open-web("https://github.com/NJUPT-SAST/sast-evento/issues");
                                        }
                                    }
                                }
                            }
                        }
                    }

                    Rectangle {
                        x: layout.padding;
                        height: 1px;
                        width: parent.width - layout.padding * 2;
                        background: Token.color.outline-variant;
                    }

                    Rectangle {
                        height: root.preferred-height * 2;
                        VerticalLayout {
                            padding-left: layout.padding;
                            padding-right: layout.padding;
                            Rectangle {
                                height: layout.padding;
                            }

                            Rectangle {
                                width: parent.width * 50%;
                                height: Token.font.label.large.size;
                                Text {
                                    height: self.preferred-height;
                                    width: 100%;
                                    text: "项目依赖";
                                    font-size: Token.font.body.large.size;
                                    font-weight: Token.font.body.large.weight;
                                    color: Token.color.on-surface;
                                }
                            }

                            Rectangle {
                                clip: true;
                                height: root.preferred-height + layout.padding;
                                HorizontalLayout {
                                    padding: 2 * layout.padding;
                                    spacing: 12px;
                                    Dependence {
                                        content: "Boost.Beast";
                                    }

                                    Dependence {
                                        content: "Boost.Url";
                                    }

                                    Dependence {
                                        content: "OpenSSL";
                                    }

                                    Dependence {
                                        content: "Slint";
                                    }

                                    Dependence {
                                        content: "toml++";
                                    }

                                    Dependence {
                                        content: "nlohmann-json";
                                    }

                                    Dependence {
                                        content: "spdlog";
                                    }

                                    Dependence {
                                        content: "keychain";
                                    }
                                }
                            }
                        }
                    }

                    Rectangle {
                        x: layout.padding;
                        height: 1px;
                        width: parent.width - layout.padding * 2;
                        background: Token.color.outline-variant;
                    }

                    Rectangle {
                        height: root.preferred-height;
                        HorizontalLayout {
                            padding: layout.padding;
                            Rectangle {
                                width: parent.width * 50%;
                                Text {
                                    height: self.preferred-height;
                                    width: 100%;
                                    text: "开源协议";
                                    font-size: Token.font.body.large.size;
                                    font-weight: Token.font.body.large.weight;
                                    color: Token.color.on-surface;
                                }
                            }

                            Rectangle {
                                width: parent.width * 50%;
                                padding: layout.padding;
                                Text {
                                    x: parent.width - self.width - layout.padding * 2;
                                    height: self.preferred-height;
                                    text: "MIT license Copyright (c) 2024 NJUPT-SAST";
                                    font-size: Token.font.body.large.size;
                                    font-weight: Token.font.body.large.weight;
                                    color: Token.color.on-surface;
                                }
                            }
                        }
                    }
                }
            }
        }

        developer-label := Empty {
            x: layout-developer-label.absolute-position.x - root.absolute-position.x;
            y: basic-info.y + layout.padding + basic-info.height;
            width: layout-developer-label.width;
            height: root.preferred-height * 3;
            Rectangle {
                border-radius: root.preferred-height / 8;
                border-width: 1px;
                border-color: Token.color.outline;
                background: Token.color.surface;
                VerticalLayout {
                    Rectangle {
                        Text {
                            x: layout.padding;
                            width: 100%;
                            text: "贡献者";
                            font-size: Token.font.body.large.size;
                            font-weight: Token.font.body.large.weight;
                            color: Token.color.on-surface;
                        }
                    }

                    Rectangle {
                        Text {
                            x: layout.padding;
                            width: 100%;
                            text: "123";
                            font-size: Token.font.body.large.size;
                            font-weight: Token.font.body.large.weight;
                            color: Token.color.on-surface;
                        }
                    }
                }
            }
        }

        about-slint := Empty {
            x: layout-about-slint.absolute-position.x - root.absolute-position.x;
            y: developer-label.y + layout.padding + developer-label.height;
            width: layout-about-slint.width;
            height: root.preferred-height * 0.5;
            Rectangle {
                border-radius: root.preferred-height / 8;
                border-width: 0px;
                border-color: Token.color.outline;
                background: Token.color.surface;
                VerticalLayout {
                    Rectangle {
                        x: 0;
                        content := AboutSlint { }
                    }
                }
            }
        }

        popup := ContentDialog{
            width: root.width;
            height: root.height;
            dialog-title: "更新日志";
            confirm-btn-text: "点击前往更新";
            cancel-btn-text: "取消";
            VerticalLayout{
                alignment: start;
                Text {
                text: "第一条更新日志1234567890123456789012345678901234567890123456789012345678901234567890\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n第一条更新日志\n";
                font-size: Token.font.body.large.size;
                font-weight: Token.font.body.large.weight;
                color: Token.color.on-surface;
                wrap: TextWrap.word-wrap;
                
            }}
            confirm => {
                AboutPageBridge.open-web("https://github.com/NJUPT-SAST/sast-evento/releases");
                popup.close();
            }
            cancel => {
                popup.close();
            }
        }
    }
}

export component AboutPage inherits Page {
    ScrollView {
        width: 100%;
        height: 100%;
        viewport-height: 1200px;
        content := AboutPageContent { }
    }
}
