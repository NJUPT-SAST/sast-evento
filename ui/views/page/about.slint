import { Token } from "../../global.slint";
import { Page, Empty, ContentDialog, PageState } from "../../components/index.slint";
import { AboutSlint, ScrollView } from "std-widgets.slint";
import { MessageManager, MessageType } from "../../logic/index.slint";
import { Button, ButtonType, LoadingAnimation, StyledText } from "../../components/index.slint";
import { Icon } from "../../modules/surrealism-ui/src/icon/icon.slint";
import { UseIcons } from "../../modules/surrealism-ui/use/src/icon.slint";

export struct ContributorStruct {
    avatar: image,
    html-url: string,
}

export global AboutPageBridge {
    in property <string> version:"v0.0.0-00000000";
    in property <string> update-log: "";
    in property <PageState> contributors-status: PageState.normal;
    in property <PageState> check-update-status: PageState.normal;
    in property <[ContributorStruct]> contributors: [];
    in-out property <bool> show-popup: false;
    callback check-update();
    callback load-contributors();
    callback open-web(string);
}

component Dependence inherits Rectangle {
    in property <string> content;
    height: 18px;
    width: text.preferred-width + 9px;
    border-width: 1px;
    border-color: Token.color.outline;
    border-radius: 9px;
    background: transparent;
    text := Text {
        vertical-alignment: center;
        horizontal-alignment: center;
        text: parent.content;
        font-size: Token.font.label.large.size;
        font-weight: Token.font.label.large.weight;
        color: Token.color.on-surface;
    }
}

component Divider inherits Rectangle {
    background: Token.color.outline-variant;
    width: 90%;
    height: 1px;
}

component Avatar inherits Rectangle {
    in property <length> avatar-size: 40px;
    in property <image> avatar;
    in property <ImageFit> image-fit: ImageFit.contain;
    callback clicked();
    width: avatar-size;
    height: avatar-size;
    border-radius: self.width / 2;
    clip: true;
    Image {
        height: root.height;
        width: root.width;
        source: avatar;
        image-fit: root.image-fit;
    }

    TouchArea {
        mouse-cursor: MouseCursor.pointer;
        clicked => {
            parent.clicked();
        }
    }
}

component Link {
    in property text <=> content.text;
    in property font <=> content.font;
    callback clicked <=> area.clicked;

    HorizontalLayout {
        spacing: 5px;
        Icon {
            source: UseIcons.icons.Share;
            height: 15px;
            width: 15px;
            colorize: area.has-hover ? Token.color.primary : Token.color.on-surface;
        }

        content := StyledText {
            on-surface: area.has-hover ? Token.color.primary : Token.color.on-surface;
            is-underline: area.has-hover ? true : false;
            area := TouchArea {
                mouse-cursor: pointer;
            }
        }
    }
}

export component AboutPage inherits Page {
    popup := ContentDialog {
        z: 999;
        width: root.width;
        height: root.height;
        dialog-title: @tr("更新日志");
        confirm-btn-text: @tr("更新");
        cancel-btn-text: @tr("取消");
        is-show <=> AboutPageBridge.show-popup;
        ScrollView {
            VerticalLayout {
                text := Text {
                    width: 100%;
                    text: AboutPageBridge.update-log;
                    font-size: Token.font.body.large.size;
                    font-weight: Token.font.body.large.weight;
                    color: Token.color.on-surface;
                    wrap: TextWrap.char-wrap;
                }
            }
        }

        confirm => {
            AboutPageBridge.open-web("https://github.com/NJUPT-SAST/sast-evento/releases/latest");
            popup.close();
        }
        cancel => {
            popup.close();
        }
    }

    ScrollView {
        verticallayout := VerticalLayout {
            alignment: LayoutAlignment.start;
            padding: 50px;
            padding-top: 10px;
            spacing: 20px;
            Text {
                text: @tr("关于");
                font-size: Token.font.display.medium.size;
                font-weight: Token.font.display.medium.weight;
            }

            HorizontalLayout {
                alignment: center;
                Image {
                    width: 220px;
                    image-fit: contain;
                    source: Token.image.display.evento;
                }

                AboutSlint {
                    height: 100px;
                }
            }

            Rectangle {
                border-radius: 8px;
                border-width: 1px;
                border-color: Token.color.outline;
                VerticalLayout {
                    padding: 20px;
                    spacing: 12px;
                    HorizontalLayout {
                        alignment: space-between;
                        Text {
                            text: @tr("版本信息 ") + AboutPageBridge.version;
                            font-size: Token.font.body.large.size;
                            font-weight: Token.font.body.large.weight;
                            color: Token.color.on-surface;
                            vertical-alignment: center;
                        }

                        Button {
                            have-icon: AboutPageBridge.check-update-status == PageState.loading;
                            type: ButtonType.text;
                            content: @tr("检查更新");
                            LoadingAnimation {
                                color: parent.on-surface;
                            }

                            clicked => {
                                AboutPageBridge.check-update();
                            }
                        }
                    }

                    Divider { }

                    HorizontalLayout {
                        alignment: space-between;
                        Text {
                            text: @tr("漏洞报告");
                            font-size: Token.font.body.large.size;
                            font-weight: Token.font.body.large.weight;
                            color: Token.color.on-surface;
                            vertical-alignment: center;
                        }

                        Button {
                            type: ButtonType.text;
                            content: "GitHub Issues";
                            clicked => {
                                AboutPageBridge.open-web("https://github.com/NJUPT-SAST/sast-evento/issues")
                            }
                        }
                    }
                }
            }

            Rectangle {
                border-radius: 8px;
                border-width: 1px;
                border-color: Token.color.outline;
                VerticalLayout {
                    padding: 20px;
                    spacing: 15px;
                    HorizontalLayout {
                        alignment: space-between;
                        Text {
                            text: @tr("网页端");
                            font-size: Token.font.body.large.size;
                            font-weight: Token.font.body.large.weight;
                            color: Token.color.on-surface;
                            vertical-alignment: center;
                        }

                        Link {
                            text: "https://evento.sast.fun";
                            font: Token.font.body.large;
                            clicked => {
                                AboutPageBridge.open-web("https://evento.sast.fun");
                            }
                        }
                    }

                    Divider { }

                    HorizontalLayout {
                        alignment: space-between;
                        Text {
                            text: @tr("GitHub 仓库");
                            font-size: Token.font.body.large.size;
                            font-weight: Token.font.body.large.weight;
                            color: Token.color.on-surface;
                            vertical-alignment: center;
                        }

                        Link {
                            text: "https://github.com/NJUPT-SAST/sast-evento";
                            font: Token.font.body.large;
                            clicked => {
                                AboutPageBridge.open-web("https://github.com/NJUPT-SAST/sast-evento");
                            }
                        }
                    }

                    Divider { }

                    VerticalLayout {
                        spacing: 10px;
                        Text {
                            text: @tr("项目依赖");
                            font-size: Token.font.body.large.size;
                            font-weight: Token.font.body.large.weight;
                            color: Token.color.on-surface;
                            vertical-alignment: center;
                        }

                        Rectangle {
                            clip: true;
                            ScrollView {
                                HorizontalLayout {
                                    spacing: 12px;
                                    Dependence {
                                        content: "Boost.Beast";
                                    }

                                    Dependence {
                                        content: "Boost.Url";
                                    }

                                    Dependence {
                                        content: "Boost.Process";
                                    }

                                    Dependence {
                                        content: "OpenSSL";
                                    }

                                    Dependence {
                                        content: "Slint";
                                    }

                                    Dependence {
                                        content: "Qt6";
                                    }

                                    Dependence {
                                        content: "toml++";
                                    }

                                    Dependence {
                                        content: "nlohmann-json";
                                    }

                                    Dependence {
                                        content: "spdlog";
                                    }

                                    Dependence {
                                        content: "keychain";
                                    }
                                }
                            }
                        }
                    }

                    Divider { }

                    HorizontalLayout {
                        alignment: space-between;
                        Text {
                            text: @tr("开源协议");
                            font-size: Token.font.body.large.size;
                            font-weight: Token.font.body.large.weight;
                            color: Token.color.on-surface;
                            vertical-alignment: center;
                        }

                        Text {
                            text: "MIT license Copyright (c) 2024 NJUPT-SAST";
                            font-size: Token.font.body.large.size;
                            font-weight: Token.font.body.large.weight;
                            color: Token.color.on-surface;
                            vertical-alignment: center;
                        }
                    }
                }
            }

            Rectangle {
                border-radius: 8px;
                border-width: 1px;
                border-color: Token.color.outline;
                VerticalLayout {
                    padding: 20px;
                    spacing: 15px;
                    Text {
                        text: @tr("贡献者");
                        font-size: Token.font.body.large.size;
                        font-weight: Token.font.body.large.weight;
                        color: Token.color.on-surface;
                        vertical-alignment: center;
                    }

                    if AboutPageBridge.contributors-status == PageState.error: Rectangle {
                        Button {
                            type: ButtonType.filled-tonal;
                            content: @tr("重新加载");
                            clicked => {
                                AboutPageBridge.load-contributors();
                            }
                        }
                    }
                    if AboutPageBridge.contributors-status == PageState.loading: LoadingAnimation {
                        color: Token.color.on-surface;
                        height: 40px;
                    }
                    if AboutPageBridge.contributors-status == PageState.normal: ScrollView {
                        height: 60px;
                        HorizontalLayout {
                            spacing: 15px;
                            for contributor in AboutPageBridge.contributors: Avatar {
                                avatar: contributor.avatar;
                                clicked => {
                                    AboutPageBridge.open-web(contributor.html-url);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
