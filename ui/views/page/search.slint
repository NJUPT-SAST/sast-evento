import { Token } from "../../global.slint";
import { Page, Empty } from "../../components/index.slint";
import { Button, VerticalBox,GroupBox,LineEdit} from "std-widgets.slint";
import { EventoImageToken } from "../../assets/image/image_token.slint";
import { EventoStyleToken } from "../../logic/style_token.slint";
import { AboutSlint, HorizontalBox,ScrollView } from "std-widgets.slint";
import { SButton } from "../../modules/surrealism-ui/index.slint";
component AboutSlint inherits Rectangle {
    height: 25%;
    AboutSlint { } 
}
export global SearchPageBridge {
    callback Searchtext(string);
    callback clickFilterDivision();
    callback clickFilterName();
    callback clickFilterTime();
 }
component Filter_Button_Type inherits SButton {
    text: "按名称筛选";
               border-color: Token.color.outline;
               border-width: 1px;
               clicked => {
                 SearchPageBridge.clickFilterName();
            }
}
component FilterForm inherits ScrollView {
    visible: true;
    height: 192px;
    width: 108px;
    viewport-height: self.height;
    viewport-width: self.width;
    VerticalLayout {
        Rectangle {
         background: #505050;
         VerticalLayout {
             b1:=Filter-Button-Type{text: "按部门筛选";}
             b2:=Filter-Button-Type{text: "按时间筛选";}
             b3:=Filter-Button-Type{}
            }
          

        }
    
    }
   
}

export component SearchPage inherits Page {
    
    // TODO: implement Search
    // optional
    
    background := Empty { }
    
    layout := VerticalLayout {  
        visible: true;  
        x: 0;  
        y: 0;  
        width: 100%;  
        height: 100%;  
        
        Rectangle {
            height: 20%;
          //  background: #a5cddb;
            background: Token.color.surface;
        }
        
        Rectangle {  
            preferred-width: 512px;  
            preferred-height: 200px;  
            background: Token.color.surface;  
            border-color: Token.color.outline;  
            border-radius: 4px;  
            border-width: 2px;  
  
            HorizontalLayout {  // 使用水平布局分隔搜索和过滤器  
                Rectangle {
                    width:10%;
                   //background: #a5cddb;
                   background: Token.color.surface;
                }
                Rectangle {//search Box
                    GroupBox{
                        title:"Search Box";
                        height: parent.height;    
                        width: parent.width;        
                       imput:= LineEdit {
                            placeholder-text: "enter text";
                            accepted => {
                                debug(imput.text);
                                SearchPageBridge.Searchtext(imput.text);
                            }
                            
                        
                        }
                    }
                    width: 70%;  
                }  
                Rectangle {
                    width:7%;
                  //  background: #a5cddb;
                  background: Token.color.surface;
                }
                Rectangle {  // 过滤器区域  
                    width: 10%; // 假设过滤器占据剩余空间  
                    states [
                          layout when Filter-Button.has-focus:{
                              Filter_Form.visible:true;
                          }  
                          layout when !Filter-Button.has-focus:{
                              Filter_Form.visible:false;
                          }
                    ]
                    
                    Filter_Button:=Button {
                        width: 100%;
                        height: 40%;
                        text: "Filter";   
                         clicked => {
                                Filter-Button.focus();
                            }
                    }  
                    Filter_Form:=FilterForm {}  
                    
                }  
                Rectangle {
                    width:3%;
                    //background: #a5cddb;
                    background: Token.color.surface;
                }
            }  
            
       
    }  
    
    Rectangle {
        height: 10%;
        background: Token.color.surface;
    }
    Rectangle {
        height: 20%;
        Image {
            width: parent.width*0.4;
            height: parent.height;
            source: Token.image.display.evento;
        }
        background: Token.color.surface;
    }

    Rectangle {
        height: 10%;
        background: Token.color.surface;
    }
    Rectangle {
        height: 40%;
        AboutSlint {}
        background: Token.color.surface;
    }
    Rectangle {
        height: 10%;
        background: Token.color.surface;
    }

}
}
