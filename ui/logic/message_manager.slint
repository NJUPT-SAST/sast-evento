export enum MessageType{
    info,
    success,
    warning,
    error
}

export struct MessageData {
    content: string,
    type: MessageType,
}

export struct ToastData {
    id: int,
    elevation: int,
    removed: bool,
}

export global MessageManagerBridge {
    in-out property <[ToastData]> toast-list;
    in-out property <bool> refresh;
    callback show-message(string, MessageType) -> int;
    pure callback get-message(int) -> MessageData;
    callback hide-message(int);
}

export global MessageManager {
    out property <[ToastData]> toast-list: MessageManagerBridge.toast-list;
    public function show-message(content: string, type: MessageType) -> int {
        return MessageManagerBridge.show-message(content, type);
    }
    pure public function get-message(id: int) -> MessageData {
        return MessageManagerBridge.get-message(id);
    }
    public function hide-message(id: int) {
        MessageManagerBridge.hide-message(id);
    }
}
